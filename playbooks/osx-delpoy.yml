---
- name: Install MacOS Packages
  hosts: localhost
  become: false
  vars:
    brew_cask_packages:
      # - microsoft-powerpoint
      # - microsoft-word
      # - microsoft-excel
      - betterzip
      - telegram-desktop
      - anydesk
      # - adobe-acrobat-pro
      # - google-chrome
      - google-drive
      # - google-hangouts
      # - docker
      - iterm2
      - slack
      # - sublime-text
      # - visual-studio-code
    brew_packages:
      # - node
      # - nodenv
      # - yarn
      # - gitlab-runner
      - autoconf
      - bash-completion
      - git
      - git-lfs
      # - docker-compose
      # - nmap
      # - rbenv
      # - ruby-build
      - ssh-copy-id
      # - tmux
      - tree
      - wget
      - zsh
      - zsh-syntax-highlighting
      # - watchman
    install_homebrew_if_missing: true
    # python_modules:
    #   - configparser
    #   - pylint
    #   - virtualenv
    upgrade_homebrew_packages: false

  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ brew_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists
